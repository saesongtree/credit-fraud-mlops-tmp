{"timestamp":"2025-09-23T15:32:44.213243","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-23T15:32:44.213979","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dynamic_training_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-23T15:32:45.794554","level":"info","event":"Tmp dir root location: /tmp","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-23T15:32:45.795328","level":"info","event":"Running command: ['/usr/bin/bash', '-c', 'python /opt/airflow/dags/src/train.py --model_name logistic_regression ']","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-23T15:32:45.814694","level":"info","event":"Output:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-23T15:32:59.349239","level":"info","event":"2025/09/23 15:32:59 WARNING mlflow.models.model: `artifact_path` is deprecated. Please use `name` instead.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-23T15:32:59.884630","level":"info","event":"/home/airflow/.local/lib/python3.12/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-23T15:32:59.884799","level":"info","event":"  warnings.warn(","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-23T15:33:05.009445","level":"info","event":"Ïä§ÌÅ¨Î¶ΩÌä∏ Ïã§Ìñâ ÏãúÏûë...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-23T15:33:05.009613","level":"info","event":"Îç∞Ïù¥ÌÑ∞ Ï†ÑÏ≤òÎ¶¨ ÏôÑÎ£å.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-23T15:33:05.009690","level":"info","event":"MLflow Run ÏãúÏûë: logistic_regression_run","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-23T15:33:05.009791","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-23T15:33:05.009865","level":"info","event":"--- Î™®Îç∏ ÌèâÍ∞Ä Í≤∞Í≥º ---","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-23T15:33:05.009930","level":"info","event":"[ÌÖåÏä§Ìä∏ Îç∞Ïù¥ÌÑ∞] AUPRC: 0.7249, Recall: 0.9184, Precision: 0.0590, F1-Score: 0.1109","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-23T15:33:05.010164","level":"info","event":"MLflow Î°úÍπÖ ÏôÑÎ£å.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-23T15:33:05.010250","level":"info","event":"üèÉ View run logistic_regression_run at: http://mlflow:5000/#/experiments/358566473184430659/runs/0e031df5cfd04aa09d23771bbe57afa1","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-23T15:33:05.010349","level":"info","event":"üß™ View experiment at: http://mlflow:5000/#/experiments/358566473184430659","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-23T15:33:05.392196","level":"info","event":"Command exited with return code 0","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-09-23T15:33:05.393002","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01997734-a126-77d5-8b81-a5864453a65f'), task_id='train_champion_model', dag_id='dynamic_fraud_training_pipeline', run_id='manual__2025-09-23T15:32:41.875198+00:00', try_number=1, map_index=-1, hostname='caa38e49cf1b', context_carrier={}, task=<Task(BashOperator): train_champion_model>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 9, 23, 15, 32, 44, 5718, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/dynamic_fraud_training_pipeline/runs/manual__2025-09-23T15%3A32%3A41.875198%2B00%3A00/tasks/train_champion_model?try_number=1')","logger":"task"}
