{"timestamp":"2025-09-24T16:53:26.691409","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-24T16:53:26.691962","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/evaluate_and_promote_to_staging_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-24T16:53:27.839493Z","level":"info","event":"Staging 후보 평가 프로세스를 시작합니다.","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-24T16:53:30.991532","level":"warning","event":"Retrying (Retry(total=6, connect=6, read=7, redirect=7, status=7)) after connection broken by 'NameResolutionError(\"<urllib3.connection.HTTPConnection object at 0x75eb1eeac4a0>: Failed to resolve 'mlflow' ([Errno -2] Name or service not known)\")': /api/2.0/mlflow/experiments/get-by-name?experiment_name=credit_fraud_experiment","logger":"urllib3.connectionpool"}
{"timestamp":"2025-09-24T16:53:40.163256","level":"warning","event":"Retrying (Retry(total=5, connect=5, read=7, redirect=7, status=7)) after connection broken by 'NameResolutionError(\"<urllib3.connection.HTTPConnection object at 0x75eb1eeac590>: Failed to resolve 'mlflow' ([Errno -2] Name or service not known)\")': /api/2.0/mlflow/experiments/get-by-name?experiment_name=credit_fraud_experiment","logger":"urllib3.connectionpool"}
{"timestamp":"2025-09-24T16:53:51.598944","level":"warning","event":"Retrying (Retry(total=4, connect=4, read=7, redirect=7, status=7)) after connection broken by 'NameResolutionError(\"<urllib3.connection.HTTPConnection object at 0x75eb1eeac710>: Failed to resolve 'mlflow' ([Errno -2] Name or service not known)\")': /api/2.0/mlflow/experiments/get-by-name?experiment_name=credit_fraud_experiment","logger":"urllib3.connectionpool"}
{"timestamp":"2025-09-24T16:54:12.504361","level":"warning","event":"Retrying (Retry(total=3, connect=3, read=7, redirect=7, status=7)) after connection broken by 'NameResolutionError(\"<urllib3.connection.HTTPConnection object at 0x75eb1eeac9b0>: Failed to resolve 'mlflow' ([Errno -2] Name or service not known)\")': /api/2.0/mlflow/experiments/get-by-name?experiment_name=credit_fraud_experiment","logger":"urllib3.connectionpool"}
{"timestamp":"2025-09-24T16:54:49.757834","level":"warning","event":"Retrying (Retry(total=2, connect=2, read=7, redirect=7, status=7)) after connection broken by 'NameResolutionError(\"<urllib3.connection.HTTPConnection object at 0x75eb1eeace30>: Failed to resolve 'mlflow' ([Errno -2] Name or service not known)\")': /api/2.0/mlflow/experiments/get-by-name?experiment_name=credit_fraud_experiment","logger":"urllib3.connectionpool"}
{"timestamp":"2025-09-24T16:56:00.917934","level":"warning","event":"Retrying (Retry(total=1, connect=1, read=7, redirect=7, status=7)) after connection broken by 'NameResolutionError(\"<urllib3.connection.HTTPConnection object at 0x75eb1eead460>: Failed to resolve 'mlflow' ([Errno -2] Name or service not known)\")': /api/2.0/mlflow/experiments/get-by-name?experiment_name=credit_fraud_experiment","logger":"urllib3.connectionpool"}
{"timestamp":"2025-09-24T16:58:11.169290","level":"warning","event":"Retrying (Retry(total=0, connect=0, read=7, redirect=7, status=7)) after connection broken by 'NameResolutionError(\"<urllib3.connection.HTTPConnection object at 0x75eb1eeac500>: Failed to resolve 'mlflow' ([Errno -2] Name or service not known)\")': /api/2.0/mlflow/experiments/get-by-name?experiment_name=credit_fraud_experiment","logger":"urllib3.connectionpool"}
{"timestamp":"2025-09-24T16:58:11.240631Z","level":"info","event":"새로운 모델(Run ID: 23ced6323edd4c7c9b763dd0cd670e3e) Combined Score: 1.6611","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-24T16:58:11.345059Z","level":"info","event":"현재 챔피언 모델(Version: 4) Combined Score: 1.6611","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-24T16:58:11.346213Z","level":"info","event":"⚔️ 기존 챔피언 모델의 성능이 더 좋습니다. 변경사항 없음.","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-24T16:58:11.345718","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
